{"ast":null,"code":"var _jsxFileName = \"/Users/haeunpark/Desktop/2022_06_Spring_16credit/CSE316/assignments/assignment2/note-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport Left from \"./components/Left\";\nimport Right from \"./components/Right\";\nimport Modal from \"./components/Modal\";\nimport MediaQuery from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([{\n    textTitle: \"CSE 316\",\n    date: \"3/15/2022, 14:42:36 PM\",\n    text: \"CSE 316\" // id: nanoid()\n\n  }, {\n    textTitle: \"Another wrapping line example! This is another text\",\n    date: \"3/15/2022, 14:42:30 PM\",\n    text: \"Another wrapping line example! This is another text\" // id: nanoid()\n\n  }]);\n  const [seletedId, setSeletedId] = useState(-1);\n  const [windowWidth, setWindowWidth] = useState(0);\n  const layoutRef = useRef(null); //addNewNote\n\n  const addNewNote = text => {\n    const newNote = {\n      textTitle: \"New Note\",\n      date: getTimeAndDate(),\n      text: \"\"\n    };\n    const newNoteList = [newNote, ...notes];\n    setNotes(newNoteList);\n    setSeletedId(0);\n  }; //getTimeAndDate\n\n\n  const getTimeAndDate = () => {\n    let today = new Date();\n    let year = today.getFullYear().toString();\n    let month = (today.getMonth() + 1).toString();\n    let date = today.getDate().toString();\n    let hours = today.getHours().toString() % 12 || 12;\n    let minutes = today.getMinutes().toString();\n    let seconds = today.getSeconds().toString();\n    let ampm = hours < 12 ? \"PM\" : \"AM\";\n    return month + \"/\" + date + \"/\" + year + \", \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n  }; //deleteNote\n\n\n  const deleteNote = () => {\n    if (seletedId === notes.length - 1) {\n      setSeletedId(notes.length - 2);\n    } //  [ ...notes.filter((eachNote, idx)=>idx!=seletedId)]\n\n\n    setNotes([...notes.filter((eachNote, idx) => idx != seletedId)]);\n  }; //saving notes to local storage\n\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"notes-data\"));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"notes-data\", JSON.stringify(notes));\n  }, [notes]);\n  const shouldShowLeft = true;\n  const shouldShowRight = true;\n  const [visibleSidebar, setVisibleSidebar] = useState(false);\n\n  const getWidth = () => {\n    const newWidth = layoutRef === null || layoutRef === void 0 ? void 0 : layoutRef.current.clientWidth;\n\n    if (newWidth < 500) {\n      console.log(newWidth); // shouldShowLeft = false;\n\n      setWindowWidth(newWidth);\n    } else {}\n  };\n\n  useEffect(() => {\n    // mount 단계\n    window.addEventListener(\"resize\", getWidth);\n    return () => {\n      //unmount단계에서 실행.\n      window.removeEventListener(\"resize\", getWidth);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whole-note\",\n    id: \"whole-note\",\n    ref: layoutRef,\n    children: [/*#__PURE__*/_jsxDEV(Left, {\n      notes: notes,\n      addNewNote: addNewNote,\n      seletedId: seletedId,\n      setSeletedId: setSeletedId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MediaQuery, {\n      minWidth: 500,\n      children: /*#__PURE__*/_jsxDEV(Right, {\n        deleteNote: deleteNote,\n        notes: notes,\n        setNotes: setNotes,\n        seletedId: seletedId,\n        getTimeAndDate: getTimeAndDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"0dWkp+4Nitrz58KwaEdkDGlOL0Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/haeunpark/Desktop/2022_06_Spring_16credit/CSE316/assignments/assignment2/note-app/src/App.js"],"names":["React","useEffect","useRef","useState","Left","Right","Modal","MediaQuery","App","notes","setNotes","textTitle","date","text","seletedId","setSeletedId","windowWidth","setWindowWidth","layoutRef","addNewNote","newNote","getTimeAndDate","newNoteList","today","Date","year","getFullYear","toString","month","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","deleteNote","length","filter","eachNote","idx","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","shouldShowLeft","shouldShowRight","visibleSidebar","setVisibleSidebar","getWidth","newWidth","current","clientWidth","console","log","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport Left from \"./components/Left\";\nimport Right from \"./components/Right\";\nimport Modal from \"./components/Modal\";\nimport MediaQuery from \"react-responsive\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      textTitle: \"CSE 316\",\n      date: \"3/15/2022, 14:42:36 PM\",\n      text: \"CSE 316\",\n      // id: nanoid()\n    },\n    {\n      textTitle: \"Another wrapping line example! This is another text\",\n      date: \"3/15/2022, 14:42:30 PM\",\n      text: \"Another wrapping line example! This is another text\",\n      // id: nanoid()\n    },\n  ]);\n\n  const [seletedId, setSeletedId] = useState(-1);\n\n  const [windowWidth, setWindowWidth] = useState(0);\n  const layoutRef = useRef(null);\n\n  //addNewNote\n  const addNewNote = (text) => {\n    const newNote = {\n      textTitle: \"New Note\",\n      date: getTimeAndDate(),\n      text: \"\",\n    };\n\n    const newNoteList = [newNote, ...notes];\n\n    setNotes(newNoteList);\n\n    setSeletedId(0);\n  };\n\n  //getTimeAndDate\n  const getTimeAndDate = () => {\n    let today = new Date();\n\n    let year = today.getFullYear().toString();\n    let month = (today.getMonth() + 1).toString();\n    let date = today.getDate().toString();\n\n    let hours = today.getHours().toString() % 12 || 12;\n    let minutes = today.getMinutes().toString();\n    let seconds = today.getSeconds().toString();\n\n    let ampm = hours < 12 ? \"PM\" : \"AM\";\n\n    return (\n      month +\n      \"/\" +\n      date +\n      \"/\" +\n      year +\n      \", \" +\n      hours +\n      \":\" +\n      minutes +\n      \":\" +\n      seconds +\n      \" \" +\n      ampm\n    );\n  };\n\n  //deleteNote\n  const deleteNote = () => {\n    if (seletedId === notes.length - 1) {\n      setSeletedId(notes.length - 2);\n    }\n\n    //  [ ...notes.filter((eachNote, idx)=>idx!=seletedId)]\n    setNotes([...notes.filter((eachNote, idx) => idx != seletedId)]);\n  };\n\n  //saving notes to local storage\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"notes-data\"));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes-data\", JSON.stringify(notes));\n  }, [notes]);\n\n  const shouldShowLeft = true;\n  const shouldShowRight = true;\n\n  const [visibleSidebar, setVisibleSidebar] = useState(false);\n\n  const getWidth = () => {\n    const newWidth = layoutRef?.current.clientWidth;\n    if (newWidth < 500) {\n      console.log(newWidth);\n      // shouldShowLeft = false;\n      setWindowWidth(newWidth);\n    } else {\n    }\n  };\n\n  useEffect(() => {\n    // mount 단계\n    window.addEventListener(\"resize\", getWidth);\n    return () => {\n      //unmount단계에서 실행.\n      window.removeEventListener(\"resize\", getWidth);\n    };\n  }, []);\n\n  return (\n    <div className=\"whole-note\" id=\"whole-note\" ref={layoutRef}>\n      <Left\n        notes={notes}\n        addNewNote={addNewNote}\n        seletedId={seletedId}\n        setSeletedId={setSeletedId}\n      />\n      <MediaQuery minWidth={500}>\n        <Right\n          deleteNote={deleteNote}\n          notes={notes}\n          setNotes={setNotes}\n          seletedId={seletedId}\n          getTimeAndDate={getTimeAndDate}\n        />\n      </MediaQuery>\n      <Modal />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}