{"ast":null,"code":"var _jsxFileName = \"/Users/haeunpark/Desktop/2022_06_Spring_16credit/CSE316/assignments/assignment2/note-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Left from \"./components/Left\";\nimport Right from \"./components/Right\";\nimport Modal from \"./components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([{\n    textTitle: \"CSE 316\",\n    date: '3/15/2022, 14:42:36 PM',\n    text: \"CSE 316\" // id: nanoid()\n\n  }, {\n    textTitle: \"Another wrapping line example! This is another text\",\n    date: '3/15/2022, 14:42:30 PM',\n    text: \"Another wrapping line example! This is another text\" // id: nanoid()\n\n  }]);\n  const [seletedId, setSeletedId] = useState(-1); //addNewNote\n\n  const addNewNote = text => {\n    const newNote = {\n      textTitle: \"New Note\",\n      date: getTimeAndDate(),\n      text: \"\"\n    };\n    const newNoteList = [newNote, ...notes];\n    setNotes(newNoteList);\n    setSeletedId(0);\n  }; //getTimeAndDate\n\n\n  const getTimeAndDate = () => {\n    let today = new Date();\n    let year = today.getFullYear().toString();\n    let month = (today.getMonth() + 1).toString();\n    let date = today.getDate().toString();\n    let hours = today.getHours().toString() % 12 || 12;\n    let minutes = today.getMinutes().toString();\n    let seconds = today.getSeconds().toString();\n    let ampm = hours < 12 ? 'PM' : 'AM';\n    return month + '/' + date + '/' + year + ', ' + hours + ':' + minutes + ':' + seconds + \" \" + ampm;\n  }; //deleteNote\n\n\n  const deleteNote = () => {\n    if (seletedId === notes.length - 1) {\n      setSeletedId(notes.length - 2);\n    } //  [ ...notes.filter((eachNote, idx)=>idx!=seletedId)]\n\n\n    setNotes([...notes.filter((eachNote, idx) => idx != seletedId)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whole-note\",\n    id: \"whole-note\",\n    children: [/*#__PURE__*/_jsxDEV(Left, {\n      notes: notes,\n      addNewNote: addNewNote,\n      seletedId: seletedId,\n      setSeletedId: setSeletedId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Right, {\n      deleteNote: deleteNote,\n      notes: notes,\n      setNotes: setNotes,\n      seletedId: seletedId,\n      getTimeAndDate: getTimeAndDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"wwZ44MUpp7ll3xRHZRYwX9mFO5g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/haeunpark/Desktop/2022_06_Spring_16credit/CSE316/assignments/assignment2/note-app/src/App.js"],"names":["React","useState","nanoid","Left","Right","Modal","App","notes","setNotes","textTitle","date","text","seletedId","setSeletedId","addNewNote","newNote","getTimeAndDate","newNoteList","today","Date","year","getFullYear","toString","month","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","deleteNote","length","filter","eachNote","idx"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport {nanoid} from \"nanoid\";\nimport Left from \"./components/Left\";\nimport Right from \"./components/Right\";\nimport Modal from \"./components/Modal\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      textTitle: \"CSE 316\", \n      date: '3/15/2022, 14:42:36 PM', \n      text: \"CSE 316\", \n      // id: nanoid()\n    },\n    {\n      textTitle: \"Another wrapping line example! This is another text\", \n      date: '3/15/2022, 14:42:30 PM', \n      text: \"Another wrapping line example! This is another text\"\n      // id: nanoid()\n    },\n  ]);\n\n  const [seletedId, setSeletedId] = useState(-1);\n\n\n  //addNewNote\n  const addNewNote = (text) =>{\n    const newNote ={\n          textTitle: \"New Note\", \n          date: getTimeAndDate(), \n          text: \"\", \n    };\n    \n    const newNoteList = [newNote, ...notes];\n\n    setNotes(newNoteList);\n\n    setSeletedId(0);\n\n  }; \n  \n  //getTimeAndDate\n  const getTimeAndDate = () =>{\n    let today = new Date();\n \n    let year = today.getFullYear().toString(); \n    let month = (today.getMonth() + 1).toString();  \n    let date = today.getDate().toString();  \n \n    let hours = (today.getHours().toString()%12||12);\n    let minutes = today.getMinutes().toString(); \n    let seconds = today.getSeconds().toString(); \n \n    let ampm = hours < 12 ? 'PM' : 'AM';\n \n    return month+'/'+date+'/'+year+', '+hours+':'+minutes+':'+seconds+\" \"+ampm\n }\n\n //deleteNote\n const deleteNote = () =>{\n\n  if(seletedId===(notes.length-1)){\n    setSeletedId(notes.length-2);\n   }\n\n  //  [ ...notes.filter((eachNote, idx)=>idx!=seletedId)]\n   setNotes([ ...notes.filter((eachNote, idx)=>idx!=seletedId)])\n }\n\n\n\n  return (\n          <div className=\"whole-note\" id=\"whole-note\">\n          <Left notes ={notes} addNewNote={addNewNote} seletedId={seletedId} setSeletedId={setSeletedId} />\n          <Right deleteNote={deleteNote} notes={notes} setNotes={setNotes} seletedId={seletedId} getTimeAndDate={getTimeAndDate}/>\n          <Modal />\n          </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}