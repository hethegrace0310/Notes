{"ast":null,"code":"var _jsxFileName = \"/Users/haeunpark/Desktop/2022_06_Spring_16credit/CSE316/assignments/assignment2/note-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Left from \"./components/Left\";\nimport Right from \"./components/Right\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([{\n    textTitle: \"CSE 316\",\n    date: '3/15/2022, 14:42:36 PM',\n    text: \"\",\n    id: nanoid()\n  }, {\n    textTitle: \"Another wrapping line example! This is another text\",\n    date: '3/15/2022, 14:42:30 PM',\n    text: \"\",\n    id: nanoid()\n  }]);\n  let currentNoteId = 0; //addNewNote\n\n  const addNewNote = text => {\n    const newNote = {\n      textTitle: \"New Note\",\n      date: getTimeAndDate(),\n      text: \"\",\n      id: nanoid()\n    };\n    const newNoteList = [newNote, ...notes];\n    setNotes(newNoteList);\n  }; //getTimeAndDate\n\n\n  const getTimeAndDate = () => {\n    let today = new Date();\n    let year = today.getFullYear().toString();\n    let month = (today.getMonth() + 1).toString();\n    let date = today.getDate().toString();\n    let hours = today.getHours().toString() % 12 || 12;\n    let minutes = today.getMinutes().toString();\n    let seconds = today.getSeconds().toString();\n    let ampm = hours < 12 ? 'PM' : 'AM';\n    return month + '/' + date + '/' + year + ', ' + hours + ':' + minutes + ':' + seconds + \" \" + ampm;\n  }; //selectedNote\n\n\n  const selectedNote = id => {\n    var _filterforText$;\n\n    currentNoteId = id;\n    let wholeNote = document.getElementsByClassName(\"a-content\");\n    let text = document.getElementById(id);\n    text.classList.add(\"clicked\");\n\n    for (let i = 0; i < wholeNote.length; i++) {\n      if (wholeNote[i].id !== id.toString()) {\n        wholeNote[i].classList.remove(\"clicked\");\n      }\n    }\n\n    let selectedNoteNow = document.getElementById(currentNoteId);\n    let filterforText = notes.filter(note => note.id === currentNoteId);\n    let currentText = ((_filterforText$ = filterforText[0]) === null || _filterforText$ === void 0 ? void 0 : _filterforText$.text) || \"\";\n    document.getElementById(\"text-input\").value = currentText;\n    document.getElementById(\"text-input\").disabled = false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whole-note\",\n    id: \"whole-note\",\n    children: [/*#__PURE__*/_jsxDEV(Left, {\n      notes: notes,\n      addNewNote: addNewNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Right, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"iYv5IhzFphhqa+I1n9y7CAIkxGM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/haeunpark/Desktop/2022_06_Spring_16credit/CSE316/assignments/assignment2/note-app/src/App.js"],"names":["React","useState","nanoid","Left","Right","App","notes","setNotes","textTitle","date","text","id","currentNoteId","addNewNote","newNote","getTimeAndDate","newNoteList","today","Date","year","getFullYear","toString","month","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","selectedNote","wholeNote","document","getElementsByClassName","getElementById","classList","add","i","length","remove","selectedNoteNow","filterforText","filter","note","currentText","value","disabled"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport {nanoid} from \"nanoid\";\nimport Left from \"./components/Left\";\nimport Right from \"./components/Right\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      textTitle: \"CSE 316\", \n      date: '3/15/2022, 14:42:36 PM', \n      text: \"\", \n      id: nanoid()\n    },\n    {\n      textTitle: \"Another wrapping line example! This is another text\", \n      date: '3/15/2022, 14:42:30 PM', \n      text: \"\", \n      id: nanoid()\n    },\n  ]);\n  let currentNoteId=0;\n\n\n  //addNewNote\n  const addNewNote = (text) =>{\n    const newNote ={\n        textTitle: \"New Note\", \n          date: getTimeAndDate(), \n          text: \"\", \n          id: nanoid()\n    };\n    \n    const newNoteList = [newNote, ...notes];\n    setNotes(newNoteList);\n  }; \n  \n  //getTimeAndDate\n  const getTimeAndDate = () =>{\n    let today = new Date();\n \n    let year = today.getFullYear().toString(); \n    let month = (today.getMonth() + 1).toString();  \n    let date = today.getDate().toString();  \n \n    let hours = (today.getHours().toString()%12||12);\n    let minutes = today.getMinutes().toString(); \n    let seconds = today.getSeconds().toString(); \n \n    let ampm = hours < 12 ? 'PM' : 'AM';\n \n    return month+'/'+date+'/'+year+', '+hours+':'+minutes+':'+seconds+\" \"+ampm\n }\n\n //selectedNote\n const selectedNote=(id)=>{\n   currentNoteId = id;\n   let wholeNote = document.getElementsByClassName(\"a-content\");\n   let text = document.getElementById(id);\n   text.classList.add(\"clicked\");\n\n   for (let i = 0; i < wholeNote.length; i++) {\n    if(wholeNote[i].id !== id.toString()){\n      wholeNote[i].classList.remove(\"clicked\")\n    }\n  }\n\n  let selectedNoteNow = document.getElementById(currentNoteId);\n  let filterforText = notes.filter(note=>note.id === currentNoteId);\n  let currentText = filterforText[0]?.text || \"\";\n\n  document.getElementById(\"text-input\").value = currentText;\n\n  document.getElementById(\"text-input\").disabled = false;\n\n }\n\n\n\n\n  return (\n          <div className=\"whole-note\" id=\"whole-note\">\n          <Left notes ={notes} addNewNote={addNewNote}/>\n          <Right />\n          </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}