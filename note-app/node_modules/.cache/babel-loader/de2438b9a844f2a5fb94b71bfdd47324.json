{"ast":null,"code":"var _jsxFileName = \"/Users/haeunpark/Desktop/2022_06_Spring_16credit/CSE316/assignments316/assignment2/note-app/src/components/Tag.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tag = _ref => {\n  _s();\n\n  let {\n    seletedId,\n    setNotes,\n    notes\n  } = _ref;\n  const [tags, setTags] = useState([]);\n  useEffect(() => {\n    if (seletedId >= 0) {\n      const notesData = JSON.parse(localStorage.getItem(\"notes-data\"));\n      console.log(notesData);\n      const targetNoteTags = notesData[seletedId].tags;\n      setTags(targetNoteTags);\n    }\n  }, [seletedId]);\n\n  const addTags = event => {\n    if (event.target.value != \"\") {\n      setTags([...tags, event.target.value]);\n      saveTags([...tags, event.target.value]);\n      event.target.value = \"\";\n    }\n  };\n\n  const deleteTags = idxToDelete => {\n    const wantToDeleteTag = tags.filter((_, idx) => idx != idxToDelete);\n    setTags(wantToDeleteTag);\n    saveTags(wantToDeleteTag);\n  };\n\n  const saveTags = newTags => {\n    setNotes(() => {\n      return [...notes.map((note, idx) => idx != seletedId ? note : { ...note,\n        tags: newTags\n      })];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: seletedId >= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wholeTagBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wholeTagBox2\",\n        children: tags.map((tag, idx) => {\n          // console.log(tags);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"a-tag\",\n            draggable: true,\n            onDragStart: e => dragStart(e, idx),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"a-tagText\",\n              children: tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"material-icons closeTag\",\n              onClick: () => deleteTags(idx),\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"tag-input\",\n        placeholder: \"Enter a tag\" // value={notes[seletedId]?.tags || \"\"}\n        ,\n        onKeyUp: e => e.key === \"Enter\" ? addTags(e) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Tag, \"g5h7oh6X9PwWerPTX5XJRel8tuQ=\");\n\n_c = Tag;\nexport default Tag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"sources":["/Users/haeunpark/Desktop/2022_06_Spring_16credit/CSE316/assignments316/assignment2/note-app/src/components/Tag.js"],"names":["React","Component","useState","useEffect","Tag","seletedId","setNotes","notes","tags","setTags","notesData","JSON","parse","localStorage","getItem","console","log","targetNoteTags","addTags","event","target","value","saveTags","deleteTags","idxToDelete","wantToDeleteTag","filter","_","idx","newTags","map","note","tag","e","dragStart","key"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\n\nconst Tag = ({ seletedId, setNotes, notes }) => {\n  const [tags, setTags] = useState([]);\n\n  useEffect(() => {\n    if (seletedId >= 0) {\n      const notesData = JSON.parse(localStorage.getItem(\"notes-data\"));\n      console.log(notesData);\n      const targetNoteTags = notesData[seletedId].tags;\n      setTags(targetNoteTags);\n    }\n  }, [seletedId]);\n\n  const addTags = (event) => {\n    if (event.target.value != \"\") {\n      setTags([...tags, event.target.value]);\n      saveTags([...tags, event.target.value]);\n      event.target.value = \"\";\n    }\n  };\n  const deleteTags = (idxToDelete) => {\n    const wantToDeleteTag = tags.filter((_, idx) => idx != idxToDelete);\n    setTags(wantToDeleteTag);\n    saveTags(wantToDeleteTag);\n  };\n\n  const saveTags = (newTags) => {\n    setNotes(() => {\n      return [\n        ...notes.map((note, idx) =>\n          idx != seletedId ? note : { ...note, tags: newTags }\n        ),\n      ];\n    });\n  };\n\n  return (\n    <>\n      {seletedId >= 0 && (\n        <div className=\"wholeTagBox\">\n          <div className=\"wholeTagBox2\">\n            {tags.map((tag, idx) => {\n              // console.log(tags);\n              return (\n                <div\n                  className=\"a-tag\"\n                  key={idx}\n                  draggable\n                  onDragStart={(e) => dragStart(e, idx)}\n                >\n                  <div className=\"a-tagText\">{tag}</div>\n                  <button\n                    className=\"material-icons closeTag\"\n                    onClick={() => deleteTags(idx)}\n                  >\n                    close\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n          <input\n            className=\"tag-input\"\n            placeholder=\"Enter a tag\"\n            // value={notes[seletedId]?.tags || \"\"}\n            onKeyUp={(e) => (e.key === \"Enter\" ? addTags(e) : null)}\n          ></input>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Tag;\n"]},"metadata":{},"sourceType":"module"}