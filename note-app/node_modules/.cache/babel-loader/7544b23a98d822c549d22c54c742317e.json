{"ast":null,"code":"var _jsxFileName = \"/Users/haeunpark/Desktop/2022_06_Spring_16credit/CSE316/assignments316/assignment2/note-app/src/components/Right.js\";\nimport TagInput from \"./TagInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Right = _ref => {\n  var _notes$seletedId;\n\n  let {\n    deleteNote,\n    notes,\n    setNotes,\n    seletedId,\n    // getTimeAndDate,\n    setSeletedId,\n    setVisibleSidebar\n  } = _ref;\n\n  const saveNote = newText => {\n    let forSplitText = newText;\n    let splitNewText = forSplitText.split(\"\\n\");\n    let firstlineForTextTitle = splitNewText[0];\n    setNotes(() => {\n      return [...notes.map((note, idx) => idx != seletedId ? note : newText == \"\" ? { ...note,\n        text: \"\",\n        textTitle: \"New Note\",\n        date: new Date()\n      } : { ...note,\n        text: newText,\n        textTitle: firstlineForTextTitle,\n        date: new Date()\n      })];\n    });\n    const newNoteList = [...notes.map((note, idx) => idx != seletedId ? note : newText == \"\" ? { ...note,\n      text: \"\",\n      textTitle: \"New Note\",\n      date: new Date()\n    } : { ...note,\n      text: newText,\n      textTitle: firstlineForTextTitle,\n      date: new Date()\n    })];\n    const orderedDate = [...newNoteList].sort((a, b) => new Date(b.date) - new Date(a.date)); // console.log(orderedDate);\n    // setNotes(orderedDate);\n\n    setSeletedId(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right\",\n    id: \"right\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-icons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"only-view-small-screen\",\n        id: \"only-view-small-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"material-icons clickable\",\n          onClick: () => setVisibleSidebar(true),\n          children: \"arrow_back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"material-icons clickable\",\n        children: \"notification_add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"material-icons clickable\",\n        children: \"person_add_alt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"material-icons clickable\",\n        onClick: deleteNote,\n        children: \"delete_outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-for-text\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"texts\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"text-input\",\n          id: \"text-input\",\n          value: ((_notes$seletedId = notes[seletedId]) === null || _notes$seletedId === void 0 ? void 0 : _notes$seletedId.text) || \"\",\n          onChange: e => {\n            saveNote(e.currentTarget.value);\n          },\n          disabled: seletedId < 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagInput, {\n      currentId: seletedId,\n      setNotes: setNotes,\n      notes: notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Right;\nexport default Right;\n\nvar _c;\n\n$RefreshReg$(_c, \"Right\");","map":{"version":3,"sources":["/Users/haeunpark/Desktop/2022_06_Spring_16credit/CSE316/assignments316/assignment2/note-app/src/components/Right.js"],"names":["TagInput","Right","deleteNote","notes","setNotes","seletedId","setSeletedId","setVisibleSidebar","saveNote","newText","forSplitText","splitNewText","split","firstlineForTextTitle","map","note","idx","text","textTitle","date","Date","newNoteList","orderedDate","sort","a","b","e","currentTarget","value"],"mappings":"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","sourcesContent":["import TagInput from \"./TagInput\";\n\nconst Right = ({\n  deleteNote,\n  notes,\n  setNotes,\n  seletedId,\n  // getTimeAndDate,\n  setSeletedId,\n  setVisibleSidebar,\n}) => {\n  const saveNote = (newText) => {\n    let forSplitText = newText;\n    let splitNewText = forSplitText.split(\"\\n\");\n    let firstlineForTextTitle = splitNewText[0];\n\n    setNotes(() => {\n      return [\n        ...notes.map((note, idx) =>\n          idx != seletedId\n            ? note\n            : newText == \"\"\n            ? { ...note, text: \"\", textTitle: \"New Note\", date: new Date() }\n            : {\n                ...note,\n                text: newText,\n                textTitle: firstlineForTextTitle,\n                date: new Date(),\n              }\n        ),\n      ];\n    });\n\n    const newNoteList = [\n      ...notes.map((note, idx) =>\n        idx != seletedId\n          ? note\n          : newText == \"\"\n          ? { ...note, text: \"\", textTitle: \"New Note\", date: new Date() }\n          : {\n              ...note,\n              text: newText,\n              textTitle: firstlineForTextTitle,\n              date: new Date(),\n            }\n      ),\n    ];\n\n    const orderedDate = [...newNoteList].sort(\n      (a, b) => new Date(b.date) - new Date(a.date)\n    );\n    // console.log(orderedDate);\n    // setNotes(orderedDate);\n\n    setSeletedId(0);\n  };\n\n  return (\n    <div className=\"right\" id=\"right\">\n      <div className=\"top-icons\">\n        <div className=\"only-view-small-screen\" id=\"only-view-small-screen\">\n          <div\n            className=\"material-icons clickable\"\n            onClick={() => setVisibleSidebar(true)}\n          >\n            arrow_back\n          </div>\n        </div>\n        <div className=\"material-icons clickable\">notification_add</div>\n        <div className=\"material-icons clickable\">person_add_alt</div>\n        <div className=\"material-icons clickable\" onClick={deleteNote}>\n          delete_outline\n        </div>\n      </div>\n\n      <div className=\"div-for-text\">\n        <p id=\"texts\">\n          <textarea\n            className=\"text-input\"\n            id=\"text-input\"\n            value={notes[seletedId]?.text || \"\"}\n            onChange={(e) => {\n              saveNote(e.currentTarget.value);\n            }}\n            disabled={seletedId < 0}\n          ></textarea>\n        </p>\n      </div>\n\n      <TagInput currentId={seletedId} setNotes={setNotes} notes={notes} />\n    </div>\n  );\n};\nexport default Right;\n"]},"metadata":{},"sourceType":"module"}